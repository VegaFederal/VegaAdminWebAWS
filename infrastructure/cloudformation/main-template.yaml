AWSTemplateFormatVersion: '2010-09-09'
Description: deploying admin site for hr

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
    Description: The deployment environment
  
  VpcId:
    Type: AWS::EC2::VPC::Id
    Default: vpc-03de7ad5a4c7c1822
    Description: ID of the existing company VPC
  
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Default: subnet-02615277a84a5fcb4
    Description: List of existing subnet IDs for deployment
    
  DynamoDBTableName:
    Type: String
    Description: Name of the existing DynamoDB table to connect to
    
  TemplateBucket:
    Type: String
    Default: admin-website-deployment-dev
    Description: S3 bucket containing CloudFormation templates

Resources:
  # Security Groups Stack
  SecurityGroupsStack:
    Type: AWS::CloudFormation::Stack # AWS :: Product Identifier : resource type
    Properties:
      TemplateURL: !Sub https://s3.${AWS::Region}.amazonaws.com/${TemplateBucket}/templates/security-groups.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !Ref VpcId
      Tags:
        - Key: Environment
          Value: !Ref Environment

  AdminWebsiteStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.${AWS::Region}.amazonaws.com/${TemplateBucket}/templates/admin-website.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !Ref VpcId
        SubnetIds: !Join [',', !Ref SubnetIds]
        DeploymentBucket: !Sub admin-website-deployment-${Environment}
        DynamoDBTableName: !Ref DynamoDBTableName
        SecurityGroupId: !GetAtt SecurityGroupsStack.Outputs.WebServerSecurityGroupId
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Add more nested stacks as needed

Outputs:
  WebsiteBucketName:
    Description: S3 bucket for website content
    Value: !GetAtt AdminWebsiteStack.Outputs.WebsiteBucketName
    Export:
      Name: !Sub ${AWS::StackName}-WebsiteBucketName

  DeploymentBucketName:
    Description: S3 bucket for deployment artifacts
    Value: !GetAtt AdminWebsiteStack.Outputs.DeploymentBucketName
    Export:
      Name: !Sub ${AWS::StackName}-DeploymentBucketName

  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !GetAtt AdminWebsiteStack.Outputs.ApiEndpoint
    Export:
      Name: !Sub ${AWS::StackName}-ApiEndpoint

  CloudFrontDistributionDomainName:
    Description: CloudFront Distribution Domain Name
    Value: !GetAtt AdminWebsiteStack.Outputs.CloudFrontDistributionDomainName
    Export:
      Name: !Sub ${AWS::StackName}-CloudFrontDomainName
  # Your outputs will go here
  WebServerSecurityGroupId:
  #  Condition: HasVpcConfig
    Description: Security Group ID for web servers
    Value: !GetAtt SecurityGroupsStack.Outputs.WebServerSecurityGroupId
    Export:
      Name: !Sub ${AWS::StackName}-WebServerSecurityGroupId
